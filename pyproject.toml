[tool.poetry]
name = "spark8t"
version = "0.0.12"
description = "This project provides some utilities function and CLI commands to run Spark on K8s."
authors = [
  "Canonical Data Platform <data-platform@lists.launchpad.net>",
]
license = "Apache-2.0"
readme = "README.md"
requires-poetry = ">=2.0.0"

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.0"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
lightkube = ">=0.11"
jinja2 = ">=3.1.2"
envyaml = ">=1.10.211231"

[tool.poetry.group.fmt]
optional = true

[tool.poetry.group.fmt.dependencies]
ruff = "^0.8.6"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
ruff = "^0.8.6"
codespell = "^2.1.0"
mypy = "^1.0.0"
pytest-mypy = ">=0.10.3"
types-pyyaml = "^6.0.12.20241230"
types-pygments = "^2.19.0.20250107"
types-colorama = "^0.4.15.20240311"
types-pyopenssl = "^24.1.0.20240722"

[tool.poetry.group.unit]
optional = true

[tool.poetry.group.unit.dependencies]
pytest-cov = ">=3.0"
pytest = ">=6.2"
pytest-mock = ">=3.10"
pyOpenSSL = ">=23.1.1"
tox = "^4.23.2"

[tool.poetry.group.integration]
optional = true

[tool.poetry.group.integration.dependencies]
pytest-cov = ">=3.0"
pytest = ">=6.2"
tox = "^4.23.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--doctest-modules --cov=./spark8t"

[tool.ruff]
extend-exclude = ["__pycache__", "*.egg_info"]
target-version = "py38"
src = ["spark8t", "tests"]

[tool.ruff.lint]
select = ['B', 'C', 'D', 'E', 'F', 'W', 'B9']
ignore = ["E501", "D107"]
extend-ignore = [
  # Ignored by black
  'E203',
  'E266',
  'E501',
  # Ignored to conform to PEP257
  'D203',
  'D212',
  'D213',
  'D214',
  'D215',
  'D404',
  'D405',
  'D406',
  'D407',
  'D408',
  'D409',
  'D410',
  'D411',
  'D413',
  'D415',
  'D416',
  'D417',
]
per-file-ignores = { "__init__.py" = ["F401"], "tests/*" = ["D"], "tests/test_utils.py" = ["F601"] }
mccabe.max-complexity = 18

[tool.ruff.lint.isort]
known-first-party = ["spark8t", "tests"]

[tool.mypy]
follow_imports = "silent"

[[tool.mypy.overrides]]
module = [
  "parameterized",
  "envyaml",
  "pytest",
]
ignore_missing_imports = true
